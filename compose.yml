services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: example-web
    ports:
      - ${PORT:-8080}:8080
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/${DATABASE_NAME:-example}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
    depends_on:
      db:
        condition: service_healthy

  cron:
    build:
      context: .
      dockerfile: cron.Dockerfile
    container_name: example-cron
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/${DATABASE_NAME:-example}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: example-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-example}
      - POSTGRES_USER=${DATABASE_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
